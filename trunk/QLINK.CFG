# QLINK Configuration File
# Put additional switches here rather than the command line
# to avoid cluttering up that resource.

#  Switch list
##################
# /F:switch  to fail on event named 'switch'
# /W:switch  to warn on event named 'switch' and take default action
# /I:switch  to ignore	event named 'switch' and take default action
# Where 'switch' is one of the following:

# ALL	  = Set all of the switches below to the specified state.

# OMFIGN  = An OMF record is encountered which is ignorable (typically
#	    this record is obsolete).  The ignore/warn action is to
#	    ignore the record.

# OMFUNK  = An unknown OMF record is encountered.  Either QLINK
#	    doesn't implement that record (please call us), or the
#	    .OBJ file is corrupted (but not so corrupted as to fail
#	    the checksum test).  The ignore/warn action is to ignore
#	    the record.

# CSUMINV = An OMF record' checksum is invalid.  Some language
#	    translators don't compute a proper checksum, but they
#	    should put in a zero for the checksum field which QLINK
#	    allows.  Something else is going on.  The ignore/warn
#	    action is to ignore the invalid checksum and process the
#	    record.

# CTYPINV = A SEGDEF record has an invalid combine type.  The
#	    ignore/warn action is to use a combine type of private (do
#	    not combine).

# ALININV = A SEGDEF record has an invalid alignment type.  The
#	    ignore/warn action is to use an alignment of byte.

# ALINDIF = Two SEGDEF records describing the same segment/class have
#	    different alignment types.	The ignore/warn action is to
#	    use the wider alignment type.

# USEDIF  = Two SEGDEF records desribing the same segment/class have
#	    different USE16/USE32 attributes.  The ignore/warn action
#	    is to use USE32 as the segment attribute.

# GRPINV  = A GRPDEF record has an invalid group component descriptor
#	    (it should be FF, but isn't).  The ignore/warn action is
#	    to ignore the value.

# GRPDIF  = A segment is contained in two different groups.  The
#	    ignore/warn action is to ignore the second and subsequent
#	    grouping of the segment.

# SEGBIG  = A USE16 segment exceeds 64KB in size.  The ignore/warn
#	    action is to ignore the problem.  You fix it.

# GRPBIG  = A USE16 segment in a group ends above 64KB.  The
#	    ignore/warn action is to ignore the problem.

# GRPMIX  = A group has mixed absolute and relocatable segments.  The
#	    ignore/warn action is to ignore the problem.

# FIXOVF  = The value of an external reference is wider than the
#	    target field.  The ignore/warn action is to shorten the
#	    value to fit the field and then ignore the problem,
#	    although you shouldn't.

# ABSOVF  = The value of an absolute constant is wider than the
#	    target field.  The ignore/warn action is to fixup the
#	    location with the wider value.  This can happen due to a
#	    bug in MASM 5.10b where it generates an incorrect .OBJ
#	    record when referencing an external absolute constant in a
#	    DD of DF field (it marks is as a word width rather than a
#	    dword width).

# ABSDIF  = A group has absolute segments with differing starting
#	    addresses.	The ignore/warn action is to ignore the
#	    problem.

# TYPDIF  = Tyep indices differ between two occurrences of the same
#	    symbol.  The ignore/warn action is to ignore the problem.

# SEGEXT  = A FIXUPP record has an external target in a different
#	    segment than the frame segment.  The ignore/warn action is
#	    to calculate the fixup using the difference between the
#	    two segments.

# SEGEXT0 = A FIXUPP record has an external target not in a segment
#	    whereas the frame is a segment.  The ignore/warn action is
#	    to ignore the frame segment.

# GRPEXT  = The group which contains an external Target in a FIXUPP
#	    record is different from the Frame group.  This can occur
#	    due to incorrect assume statements.  For example, if you
#	    put data variables in a code segment (with, say, ASSUME
#	    CS:PGROUP), be sure to use a corresponding ASSUME
#	    DS:PGROUP as the assume for DS is the segment/group
#	    reference used as the frame for data variables.  The
#	    ignore/warn action is to ignore the problem, but you
#	    shouldn't.

# GRPEXT0 = The group which contains an ungrouped external Target in a
#	    FIXUPP record is different from the Frame group.  This can
#	    occur due to incorrect assume statements.  For example, if
#	    you put data variables in a code segment (with, say,
#	    ASSUME CS:PGROUP), be sure to use a corresponding ASSUME
#	    DS:PGROUP as the assume for DS is the segment/group
#	    reference used as the frame for data variables.  The
#	    ignore/warn action is to ignore the problem, but you
#	    shouldn't.

# RELGRP  = A self-relative FIXUPP record has a frame group which does
#	    not contain the fixup segment.  The ignore/warn action is
#	    to calculate the fixup using the difference between the
#	    fixup segment and the frame group.

# RELSEG  = A self-relative FIXUPP record has a frame segment which is
#	    not the same as the fixup segment.	The ignore/warn action
#	    is the calculate the fixup using the difference between
#	    the fixup segment and the frame segment.

# RELGRPX = A self-relative FIXUPP record has an external frame group
#	    which does not contain the fixup segment.  The ignore/warn
#	    action is to calculate the fixup using the difference
#	    between the fixup segment and the frame group.

# RELSEGX = A self-relative FIXUPP record has an external frame
#	    segment which is not the same as the fixup segment.  The
#	    ignore/warn action is the calculate the fixup using the
#	    difference between the fixup segment and the frame
#	    segment.

# PUBDIF  = In a PUBDEF record, the referenced segment is not
#	    contained in the referenced group.	The ignore/warn action
#	    is to ignore the problem.

# LINDIF  = In a LINNUM record, the referenced segment is not
#	    contained in the referenced group.	The ignore/warn action
#	    is to ignore the problem.

# FIXDIF  = In a FIXUPP record, the Frame or Target group does not
#	    contain the Target or Frame segment.  The ignore/warn
#	    action is to ignore the problem.

# FIXDIFX = In a FIXUPP record, the Frame or Target segment is not
#	    contained in any group, but there's a Target or Frame
#	    group.  The ignore/warn action is to ignore the problem.

# FRMSEG  = The Frame base of a FIXUPP record is a segment, but
#	    perhaps should be the group which contains the segment.
#	    The ignore/warn action is to ignore the problem.

# THRINV  = The Target Method field of a thread FIXUPP record is > 3.
#	    The The ignore/warn action is to reduce the method number
#	    modulo 4.

# EXTMAT  = Ensure that all EXTDEFs have a matching reference to them.
#	    If not, then presumably the corresponding extrn can be
#	    deleted.  The ignore/warn action is to ignore the problem.

######################################################################
# Default settings
#
# The default setting for all error messages is /F:switch for all
# switches (i.e., /F:ALL), except for EXTMAT and THRINV for which the
# default setting is ignore (i.e., /I:EXTMAT and /I:THRINV).

